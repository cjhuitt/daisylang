Enumerate: TrafficLightColor
    RED
    YELLOW
    GREEN

print( RED )
print( RED.category() )
print( RED.category().name() )
for light in TrafficLightColor
    print( "Light " + light.name() + ": " + light.value().toString() )

for light in TrafficLightColor.entries()
    print( "Light " + light.name() + ": " + light.value().toString() )

Class: IndividualLight is Stringifiable
    color = TrafficLightColor
    lit = false
    
    // TODO: Should be able to specify a default value for the boolean
    //Method: init( c: TrafficLightColor, l: false )
    Method: init( c: TrafficLightColor, l: Boolean )
        color = c
        lit = l
    
    Method: String toString()
        string = color.name()
        if lit?
            string = string + "(on)"
        return string

// TODO: This is how it should look
//Class: TrafficLight is Stringifiable
//    lights = [ 
//        IndividualLight.create( c: RED, l: true ),
//        IndividualLight.create( YELLOW ),
//        IndividualLight.create( GREEN )
//    ]
//    
//    Method: toString()
//        return lights[RED].toString() + ":" + lights[YELLOW].toString() + ":" + lights[GREEN].toString()

Class: TrafficLight is Stringifiable
    lights = [ red = IndividualLight.create( c: RED, l: true ),
      yellow = IndividualLight.create( c: YELLOW, l: false ),
      green = IndividualLight.create( c: GREEN, l: false ) ]
    
    Method: toString()
        return red.toString() + ":" + yellow.toString() + ":" + green.toString()

light = TrafficLight.create()
print( light )
